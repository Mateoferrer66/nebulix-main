---
import BaseLayout from "./BaseLayout.astro";
import { Picture } from "astro-imagetools/components";
import ProductVariationImageWrap from "@components/shop/ProductVariationImageWrap.vue";
import Block from "@components/block/Block.astro";
import { getImageUrl, getImageTransitionName } from "@util/helpers";
import { t } from "@util/translate";

const {
  title,
  description,
  thumbnail,
  intro,
  variation_images,
  og_image,
  blocks,
  style,
} = Astro.props;
const { slug } = Astro.params;
const pageTitle = `${title}`;

const isPng = (thumbnail) => {
  return thumbnail.endsWith(".png");
};
const hasBlocks = blocks && blocks.length > 0;
---

<BaseLayout
  title={pageTitle}
  {description}
  pageClass={style.page_class}
  {thumbnail}
  {og_image}
>
  <div class="page-split__grid">
    <div
      class="z-10 flex flex-col"
      id="header"
      transition:name={`hero_${slug || Math.random()}`}
    >
      <div
        class={`sticky top-0 overflow-hidden sm:h-screen grid grid-cols-1 grid-rows-1 ${
          isPng(thumbnail) ? "" : ""
        }`}
      >
        {
          thumbnail && (
            <Picture
              attributes={{
                picture: {
                  class:
                    "row-start-1 col-start-1 z-0 surface-base after:bg-no-repeat after:blur-sm",
                },
              }}
              src={thumbnail}
              sizes="(max-width: 767px) 100vw, 100vh"
              width={1920}
              height={1920}
              ar={1}
              position="attention"
              loading="eager"
              alt={title}
              layout={isPng(thumbnail) ? "fill" : "fill"}
              objectFit={isPng(thumbnail) ? "contain" : "cover"}
            />
          )
        }
        {
          variation_images &&
            variation_images.map((image, index) => (
              <ProductVariationImageWrap client:idle id={image.id}>
                <Picture
                  attributes={{
                    picture: {
                      class:
                        "sm:h-screen z-0 surface-base h-full after:bg-no-repeat",
                    },
                  }}
                  src={image.thumbnail}
                  sizes="(max-width: 767px) 100vw, 100vh"
                  width={1920}
                  height={1920}
                  ar={1}
                  position="attention"
                  loading="eager"
                  alt={image.label || "title"}
                  layout={isPng(image.thumbnail) ? "fill" : "fill"}
                  objectFit={isPng(image.thumbnail) ? "contain" : "cover"}
                />
              </ProductVariationImageWrap>
            ))
        }
      </div>

      <div
        class="scroll-container relative bottom-0 z-50 mt-auto flex w-full justify-start backdrop-blur-sm"
      >
        <a
          aria-label={t("enlarge_image")}
          class="group relative overflow-hidden rounded-md shadow-lg transition-transform duration-500 hover:-translate-y-1 hover:scale-105"
          href={getImageUrl(thumbnail)}
          transition:name={getImageTransitionName(thumbnail)}
        >
          <Picture
            attributes={{ picture: { class: "z-10" } }}
            src={thumbnail}
            sizes="120px"
            width={120}
            height={120}
            ar={1}
            position="attention"
            loading="eager"
            alt={title}
            layout="fullWidth"
          />
        </a>

        {
          variation_images &&
            variation_images.map((image) => (
              <a
                aria-label={t("enlarge_image")}
                class="  group relative overflow-hidden rounded-md shadow-lg transition-transform duration-500 hover:-translate-y-1 hover:scale-105"
                href={`/images/${
                  image.thumbnail.split("/").pop().split(".")[0]
                }`}
                transition:name={`image_${
                  image.thumbnail.split("/").pop().split(".")[0]
                }`}
              >
                <Picture
                  attributes={{ picture: { class: "z-10" } }}
                  src={image.thumbnail}
                  sizes="120px"
                  width={120}
                  height={120}
                  ar={1}
                  position="attention"
                  loading="eager"
                  alt={image.label || "title"}
                  layout="fullWidth"
                />
              </a>
            ))
        }
      </div>
    </div>

    <div
      class="page-split__content z-0 mb-0 mt-8 w-full md:max-w-2xl md:pl-0 md:pr-8"
    >
      <div class="mx-auto flex w-full items-center md:min-h-[85vh]">
        <div class="flex flex-col gap-4">
          <div class="grid gap-1">
            <slot name="breadcrumb" />

            <h1 class="title">
              {title}
            </h1>
            {intro && <div class="subtitle balance"> {intro} </div>}
          </div>

          <slot />
        </div>
      </div>
      {!hasBlocks && <slot name="nav" />}
    </div>
  </div>
  {
    hasBlocks && (
      <>
        <div class={style.block_class || "my-20"}>
          {blocks.map((section) => (
            <Block {...section} />
          ))}
        </div>
        <div class="container-md pb-20">
          <slot name="nav" />
        </div>
      </>
    )
  }

  <div class="pointer-events-none fixed bottom-0 z-40 w-full" slot="footer">
    <slot name="cart" />
  </div>
</BaseLayout>

<style lang="postcss">
      .page-split{
        &__grid {
          @apply grid 2xl:gap-14 ;
          grid-template-columns: minmax(0, 1fr);
          @screen md {
            grid-template-columns: minmax(0, 1fr) minmax(0, 1fr);
          }
          @screen 2xl {
            grid-template-columns: 40vw minmax(0, 1fr);
          }
        }
        &__title{
          background: radial-gradient(circle, rgba(0,0,0,0.6) 25%, rgba(0,0,0,0) 90%);
        }

		&__content {
			padding-inline: var(--spacing);
		 
		}
      }

	  .scroll-container {
		  scroll-snap-type: x mandatory;  
			display: flex;
			width: 100%;
			overflow-x: auto;
			scrollbar-width: none;
			gap: var(--spacing);
			padding: var(--spacing);

			a {
				scroll-snap-align: center;  
				flex-shrink: 0;
				display: flex;
				justify-content: center;
				align-items: center; 
				
				}

	}
</style>

<style is:global>
  .page-split__content {
    .img,
    iframe {
      width: calc(100% + var(--container-spacing));
      margin-left: calc(var(--spacing) * -1);
      @apply my-10 aspect-video h-auto;
      @screen md {
        width: 100%;
        margin-left: 0;
      }
    }
  }
</style>
