---
/* BLOG ARCHIVE PAGES */
import { getEntry } from "astro:content";
import PageLayoutArchive from "@layouts/PageLayoutArchive.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths({ paginate }) {
  const posts = (await getCollection("blog")).sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
  );
  const { data } = await getEntry("config", "blog");

  return paginate(posts, { pageSize: data.per_page });
}
const base_url = import.meta.env.BLOG_SLUG;
const { page } = Astro.props;
 
const { data } = await getEntry("config", "blog");

const posts = (await getCollection("blog")).sort(
  (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf(),
);
/* get the used tags */
const allFilters = posts.map((post) => post.data.tag).filter((post) => !!post);
const filters = [...new Set(allFilters.flat(1))];
---

<PageLayoutArchive {page} {filters} {data} {base_url} />
